#include "parallax.h"
#include "mbed.h"
#include <math.h>      
#define PI 3.14159265

// extern parallax_servo *servo0_ptr, *servo1_ptr;
// extern Ticker servo_ticker;
// extern Ticker encoder_ticker;
// extern parallax_encoder *encoder3_ptr;
// extern Serial xbee;
// extern Serial pc;
extern car_x, car_y, car_theta;

float readEncoder() {
    return (float)(*encoder3_ptr);
}
void ServoStop(){
    servo0_ptr->set_speed(0);
    servo1_ptr->set_speed(0);
    servo0_ptr->set_factor(1);
    servo1_ptr->set_factor(1);
    return;
}
void ServoCtrl( int speed ){
    pc.printf("jjjj");
    servo0_ptr->set_speed(speed*0.3);
    servo1_ptr->set_speed(-speed*0.7);
    return;
}




void ServoDistaqnce(float distance) 
{
    ServoCtrl(90);
    while(encoder3_ptr->get_cm() < distance) wait_ms(50);
    ServoStop();
}
void ServoTurn(float deg){
    int speed = 50;
    if (deg < 0) { speed = -speed; deg = -deg;}
    servo0_ptr->set_speed(speed*0.3);
    servo1_ptr->set_speed(speed*0.7);
    while(encoder3_ptr->get_cm() < deg * 35 / 360) wait_ms(50);
    ServoStop();
}

void PointToPoint(float x, float y) {
    float deltax = x - car_x, deltay = y - car_y;
    float target = atan (deltay/deltax) * 180.0 / PI; 
    float turnDeg = target - car_theta;
    float distance = sqrt(pow(deltax, 2.0)+pow(deltay,2.0)); 
    ServoTurn(turnDeg);
    ServoDistaqnce(distance);
    car_x = x;
    car_y = y;
    car_theta = target;
}


